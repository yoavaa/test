{ "name": "UploadButton",
  "memberOf": "$w",
  "mixes":
    [ "$w.FormElement",
      "$w.HiddenCollapsedMixin",
      "$w.DisabledMixin",
      "$w.FocusMixin" ],
  "labels":
    [ "new" ],
  "location":
    { "filename": "UploadButton.es6",
      "lineno": 48 },
  "docs":
    { "summary": "An upload button enables users to upload files to your site.",
      "description":
        [ "<h3 id=\"typical-scenario\">Typical File Upload Scenario</h3>",
          " <p>In a typical scenario, the page from which files are uploaded contains",
          " an upload button and another element, such as a regular button. The user chooses",
          " which file to upload by clicking the upload button and selecting the",
          " file in a native file chooser dialog. At that point the file is stored in",
          " the upload button's [`value`](#value) property as a [`File`](#File) object. Then",
          " the user triggers an event, such as a button click, on the other element.",
          " That element's event handler calls the [`startUpload()`](#startUpload)",
          " function to perform the actual upload. The upload will either succeed and",
          " and give you an [`UploadedFile`](#UploadedFile) object, or fail and give you",
          " an [`UploadError`](#UploadError) object.</p>" ],
      "links": [],
      "examples":
        [ { "title": "Typical file upload scenario",
            "body":
              [ "$w('#myButton').onClick( () => {",
                "  if ($w(\"#myUploadButton\").value.length > 0) {  // user chose a file",
                "    console.log(`Uploading '${$w(\"#myUploadButton\").value[0].name}'`);",
                "    $w(\"#myUploadButton\").startUpload()",
                "      .then( (uploadedFile) => {",
                "        console.log(\"Upload successful. File is available here:\");",
                "        console.log(uploadedFile.url);",
                "      } )",
                "      .catch( (uploadError) => {",
                "        console.log(`File upload error: ${uploadError.errorCode}`);",
                "        console.log(uploadError.errorDescription);",
                "      } );",
                "  }",
                "  else {  // user clicked button but didn't chose a file",
                "    console.log(\"Please choose a file to upload.\")",
                "  }",
                "} );" ] } ] },
  "srcDocs":
    { "summary": "An upload button enables users to upload files to your site.",
      "description":
        [ "<h3 id=\"typical-scenario\">Typical File Upload Scenario</h3>",
          " <p>In a typical scenario, the page from which files are uploaded contains",
          " an upload button and another element, such as a regular button. The user chooses",
          " which file to upload by clicking the upload button and selecting the",
          " file in a native file chooser dialog. At that point the file is stored in",
          " the upload button's [`value`](#value) property as a [`File`](#File) object. Then",
          " the user triggers an event, such as a button click, on the other element.",
          " That element's event handler calls the [`startUpload()`](#startUpload)",
          " function to perform the actual upload. The upload will either succeed and",
          " and give you an [`UploadedFile`](#UploadedFile) object, or fail and give you",
          " an [`UploadError`](#UploadError) object.</p>" ],
      "links": [],
      "examples":
        [ { "title": "Typical file upload scenario",
            "body":
              [ "$w('#myButton').onClick( () => {",
                "  if ($w(\"#myUploadButton\").value.length > 0) {  // user chose a file",
                "    console.log(`Uploading '${$w(\"#myUploadButton\").value[0].name}'`);",
                "    $w(\"#myUploadButton\").startUpload()",
                "      .then( (uploadedFile) => {",
                "        console.log(\"Upload successful. File is available here:\");",
                "        console.log(uploadedFile.url);",
                "      } )",
                "      .catch( (uploadError) => {",
                "        console.log(`File upload error: ${uploadError.errorCode}`);",
                "        console.log(uploadError.errorDescription);",
                "      } );",
                "  }",
                "  else {  // user clicked button but didn't chose a file",
                "    console.log(\"Please choose a file to upload.\")",
                "  }",
                "} );" ] } ] },
  "properties":
    [ { "name": "buttonLabel",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "UploadButton.es6",
              "lineno": 86 } ],
        "docs":
          { "summary": "Sets or gets the label on the upload button.",
            "links": [],
            "examples":
              [ { "title": "Get an upload button's label",
                  "body":
                    [ "let label = $w(\"#myUploadButton\").buttonLabel;  // \"Choose File\"" ] },
                { "title": "Set an upload button's label",
                  "body":
                    [ "$w(\"#myUploadButton\").buttonLabel = \"Choose File\";" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets the label on the upload button.",
            "links": [],
            "examples":
              [ { "title": "Get an upload button's label",
                  "body":
                    [ "let label = $w(\"#myUploadButton\").buttonLabel;  // \"Choose File\"" ] },
                { "title": "Set an upload button's label",
                  "body":
                    [ "$w(\"#myUploadButton\").buttonLabel = \"Choose File\";" ] } ] } },
      { "name": "fileType",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "UploadButton.es6",
              "lineno": 120 } ],
        "docs":
          { "summary": "Sets or gets the type of file that a user can upload.",
            "description":
              [ "Setting the `fileType` property sets the type of file that",
                " a user can upload. The value of `fileType` can be set to either",
                " `\"Image\"` or `\"Document\"`.",
                "",
                " Getting the `fileType` property returns the current type of",
                " file that a user can upload." ],
            "links": [],
            "examples":
              [ { "title": "Get an upload button's type",
                  "body":
                    [ "let fileType = $w(\"#myUploadButton\").fileType;  // \"Image\"" ] },
                { "title": "Set an upload button's type",
                  "body":
                    [ "$w(\"#myUploadButton\").fileType = \"Document\";" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets the type of file that a user can upload.",
            "description":
              [ "Setting the `fileType` property sets the type of file that",
                " a user can upload. The value of `fileType` can be set to either",
                " `\"Image\"` or `\"Document\"`.",
                "",
                " Getting the `fileType` property returns the current type of",
                " file that a user can upload." ],
            "links": [],
            "examples":
              [ { "title": "Get an upload button's type",
                  "body":
                    [ "let fileType = $w(\"#myUploadButton\").fileType;  // \"Image\"" ] },
                { "title": "Set an upload button's type",
                  "body":
                    [ "$w(\"#myUploadButton\").fileType = \"Document\";" ] } ] } },
      { "name": "value",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.UploadButton~File" ] },
        "locations":
          [ { "filename": "UploadButton.es6",
              "lineno": 162 } ],
        "docs":
          { "summary": "Returns a list of files that are pending upload.",
            "description":
              [ "Returns a list of [File](#File) objects that a user has selected to",
                " upload after pressing the upload button.",
                "",
                " See how `value` is used in a",
                " [typical file upload scenario](#typical-scenario)." ],
            "links": [],
            "examples":
              [ { "title": "Get the files pending upload",
                  "body":
                    [ "let files = $w(\"#myUploadButton\").value;",
                      "",
                      "let fileName = files[0].name; // \"mypic.jpg\"",
                      "let fileSize = files[0].size; // 45941" ] },
                { "title": "Full file upload scenario",
                  "body":
                    [ "$w('#myButton').onClick( () => {",
                      "  if ($w(\"#myUploadButton\").value.length > 0) {  // user chose a file",
                      "    console.log(`Uploading '${$w(\"#myUploadButton\").value[0].name}'`);",
                      "    $w(\"#myUploadButton\").startUpload()",
                      "      .then( (uploadedFile) => {",
                      "        console.log(\"Upload successful. File is available here:\");",
                      "        console.log(uploadedFile.url);",
                      "      } )",
                      "      .catch( (uploadError) => {",
                      "        console.log(`File upload error: ${uploadError.errorCode}`);",
                      "        console.log(uploadError.errorDescription);",
                      "      } );",
                      "  }",
                      "  else {  // user clicked button but didn't chose a file",
                      "    console.log(\"Please choose a file to upload.\")",
                      "  }",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "Returns a list of files that are pending upload.",
            "description":
              [ "Returns a list of [File](#File) objects that a user has selected to",
                " upload after pressing the upload button.",
                "",
                " See how `value` is used in a",
                " [typical file upload scenario](#typical-scenario)." ],
            "links": [],
            "examples":
              [ { "title": "Get the files pending upload",
                  "body":
                    [ "let files = $w(\"#myUploadButton\").value;",
                      "",
                      "let fileName = files[0].name; // \"mypic.jpg\"",
                      "let fileSize = files[0].size; // 45941" ] },
                { "title": "Full file upload scenario",
                  "body":
                    [ "$w('#myButton').onClick( () => {",
                      "  if ($w(\"#myUploadButton\").value.length > 0) {  // user chose a file",
                      "    console.log(`Uploading '${$w(\"#myUploadButton\").value[0].name}'`);",
                      "    $w(\"#myUploadButton\").startUpload()",
                      "      .then( (uploadedFile) => {",
                      "        console.log(\"Upload successful. File is available here:\");",
                      "        console.log(uploadedFile.url);",
                      "      } )",
                      "      .catch( (uploadError) => {",
                      "        console.log(`File upload error: ${uploadError.errorCode}`);",
                      "        console.log(uploadError.errorDescription);",
                      "      } );",
                      "  }",
                      "  else {  // user clicked button but didn't chose a file",
                      "    console.log(\"Please choose a file to upload.\")",
                      "  }",
                      "} );" ] } ] } } ],
  "operations":
    [ { "name": "reset",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "filename": "UploadButton.es6",
              "lineno": 245 } ],
        "docs":
          { "summary": "Clears the files that are pending upload.",
            "description":
              [ "The `value` of the upload button contains a list of files that have been",
                " selected to upload. The `reset()` function clears these files." ],
            "links": [],
            "examples":
              [ { "title": "Clears the files pending upload",
                  "body":
                    [ "$w(\"#myUploadButton\").reset();" ] } ] },
        "srcDocs":
          { "summary": "Clears the files that are pending upload.",
            "description":
              [ "The `value` of the upload button contains a list of files that have been",
                " selected to upload. The `reset()` function clears these files." ],
            "links": [],
            "examples":
              [ { "title": "Clears the files pending upload",
                  "body":
                    [ "$w(\"#myUploadButton\").reset();" ] } ] } },
      { "name": "startUpload",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "$w.UploadButton~UploadedFile" ] },
            "doc": "undefined. on fulfilled - Resolves when the file upload is completed.. on rejected - Rejects if the file upload fails.",
            "srcDoc": "undefined. on fulfilled - Resolves when the file upload is completed.. on rejected - Rejects if the file upload fails." },
        "locations":
          [ { "filename": "UploadButton.es6",
              "lineno": 201 } ],
        "docs":
          { "summary": "Uploads the files that the user has chosen.",
            "description":
              [ "The `startUpload()` function triggers the upload of the files in the",
                " upload button's [value](#value) property.",
                "",
                " See how `startUpload()` is used in a",
                " [typical file upload scenario](#typical-scenario).",
                "",
                " The upload button will not accept files that are larger than 25MB." ],
            "links": [],
            "examples":
              [ { "title": "Start a file upload",
                  "body":
                    [ "$w(\"#myUploadButton\").startUpload()",
                      "  .then( (uploadedFile) => {",
                      "    let url = uploadedFile.url;  // \"wix:image://v1/68d3a9_1de7529c444b4c9eb38401f8efe0cad2.jpg/flowers.jpg/#originWidth=1970&originHeight=1120\"",
                      "  } )",
                      "  .catch( (uploadError) => {",
                      "    let errCode = uploadError.errorCode;  // 7751",
                      "    let errDesc = uploadError.errorDescription;\t// \"Error description\"",
                      "  } );" ] },
                { "title": "Full file upload scenario",
                  "body":
                    [ "$w('#myButton').onClick( () => {",
                      "  if ($w(\"#myUploadButton\").value.length > 0) {  // user chose a file",
                      "    console.log(`Uploading '${$w(\"#myUploadButton\").value[0].name}'`);",
                      "    $w(\"#myUploadButton\").startUpload()",
                      "      .then( (uploadedFile) => {",
                      "        console.log(\"Upload successful. File is available here:\");",
                      "        console.log(uploadedFile.url);",
                      "      } )",
                      "      .catch( (uploadError) => {",
                      "        console.log(`File upload error: ${uploadError.errorCode}`);",
                      "        console.log(uploadError.errorDescription);",
                      "      } );",
                      "  }",
                      "  else {  // user clicked button but didn't chose a file",
                      "    console.log(\"Please choose a file to upload.\")",
                      "  }",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "Uploads the files that the user has chosen.",
            "description":
              [ "The `startUpload()` function triggers the upload of the files in the",
                " upload button's [value](#value) property.",
                "",
                " See how `startUpload()` is used in a",
                " [typical file upload scenario](#typical-scenario).",
                "",
                " The upload button will not accept files that are larger than 25MB." ],
            "links": [],
            "examples":
              [ { "title": "Start a file upload",
                  "body":
                    [ "$w(\"#myUploadButton\").startUpload()",
                      "  .then( (uploadedFile) => {",
                      "    let url = uploadedFile.url;  // \"wix:image://v1/68d3a9_1de7529c444b4c9eb38401f8efe0cad2.jpg/flowers.jpg/#originWidth=1970&originHeight=1120\"",
                      "  } )",
                      "  .catch( (uploadError) => {",
                      "    let errCode = uploadError.errorCode;  // 7751",
                      "    let errDesc = uploadError.errorDescription;\t// \"Error description\"",
                      "  } );" ] },
                { "title": "Full file upload scenario",
                  "body":
                    [ "$w('#myButton').onClick( () => {",
                      "  if ($w(\"#myUploadButton\").value.length > 0) {  // user chose a file",
                      "    console.log(`Uploading '${$w(\"#myUploadButton\").value[0].name}'`);",
                      "    $w(\"#myUploadButton\").startUpload()",
                      "      .then( (uploadedFile) => {",
                      "        console.log(\"Upload successful. File is available here:\");",
                      "        console.log(uploadedFile.url);",
                      "      } )",
                      "      .catch( (uploadError) => {",
                      "        console.log(`File upload error: ${uploadError.errorCode}`);",
                      "        console.log(uploadError.errorDescription);",
                      "      } );",
                      "  }",
                      "  else {  // user clicked button but didn't chose a file",
                      "    console.log(\"Please choose a file to upload.\")",
                      "  }",
                      "} );" ] } ] } } ],
  "callbacks": [],
  "messages":
    [ { "name": "File",
        "locations":
          [ { "filename": "UploadButton.es6",
              "lineno": 18 } ],
        "docs":
          { "summary": "The object used by the `value` property that represents\n files ready for upload.",
            "links":
              [ "[value](#value)" ],
            "examples":
              [ { "title": "Get the files pending upload",
                  "body":
                    [ "let files = $w(\"#myUploadButton\").value;",
                      "",
                      "let fileName = files[0].name; // \"mypic.jpg\"",
                      "let fileSize = files[0].size; // 45941" ] } ] },
        "srcDocs":
          { "summary": "The object used by the `value` property that represents\n files ready for upload.",
            "links":
              [ "[value](#value)" ],
            "examples":
              [ { "title": "Get the files pending upload",
                  "body":
                    [ "let files = $w(\"#myUploadButton\").value;",
                      "",
                      "let fileName = files[0].name; // \"mypic.jpg\"",
                      "let fileSize = files[0].size; // 45941" ] } ] },
        "members":
          [ { "name": "name",
              "type": "string",
              "docs": "The file's name.",
              "srcDocs": "The file's name." },
            { "name": "size",
              "type": "string",
              "docs": "The file's size in bytes.",
              "srcDocs": "The file's size in bytes." } ],
        "labels": [] },
      { "name": "UploadError",
        "locations":
          [ { "filename": "UploadButton.es6",
              "lineno": 37 } ],
        "docs":
          { "summary": "The object returned by the `startUpload()` function's\n Promise when an upload fails.",
            "links":
              [ "[startUpload](#startUpload)" ],
            "examples":
              [ { "title": "Get upload error information",
                  "body":
                    [ "$w(\"#myUploadButton\").startUpload()",
                      "  .then( (uploadedFile) => {",
                      "    let url = uploadedFile.url;  // \"wix:image://v1/68d3a9_1de7529c444b4c9eb38401f8efe0cad2.jpg/flowers.jpg/#originWidth=1970&originHeight=1120\"",
                      "  } )",
                      "  .catch( (uploadError) => {",
                      "    let errCode = uploadError.errorCode;  // 7751",
                      "    let errDesc = uploadError.errorDescription;\t// \"Error description\"",
                      "  } );" ] } ] },
        "srcDocs":
          { "summary": "The object returned by the `startUpload()` function's\n Promise when an upload fails.",
            "links":
              [ "[startUpload](#startUpload)" ],
            "examples":
              [ { "title": "Get upload error information",
                  "body":
                    [ "$w(\"#myUploadButton\").startUpload()",
                      "  .then( (uploadedFile) => {",
                      "    let url = uploadedFile.url;  // \"wix:image://v1/68d3a9_1de7529c444b4c9eb38401f8efe0cad2.jpg/flowers.jpg/#originWidth=1970&originHeight=1120\"",
                      "  } )",
                      "  .catch( (uploadError) => {",
                      "    let errCode = uploadError.errorCode;  // 7751",
                      "    let errDesc = uploadError.errorDescription;\t// \"Error description\"",
                      "  } );" ] } ] },
        "members":
          [ { "name": "errorCode",
              "type": "string",
              "docs": "Numeric The error's code.",
              "srcDocs": "Numeric The error's code." },
            { "name": "errorDescription",
              "type": "string",
              "docs": "The error's description.",
              "srcDocs": "The error's description." } ],
        "labels": [] },
      { "name": "UploadedFile",
        "locations":
          [ { "filename": "UploadButton.es6",
              "lineno": 28 } ],
        "docs":
          { "summary": "The object returned by the `startUpload()` function's\n Promise that contains the URL of the successfully uploaded file.",
            "links":
              [ "[startUpload](#startUpload)" ],
            "examples":
              [ { "title": "Get uploaded file information",
                  "body":
                    [ "$w(\"#myUploadButton\").startUpload()",
                      "  .then( (uploadedFile) => {",
                      "    let url = uploadedFile.url;  // \"wix:image://v1/68d3a9_1de7529c444b4c9eb38401f8efe0cad2.jpg/flowers.jpg/#originWidth=1970&originHeight=1120\"",
                      "  } )",
                      "  .catch( (uploadError) => {",
                      "    let errCode = uploadError.errorCode;  // 7751",
                      "    let errDesc = uploadError.errorDescription;\t// \"Error description\"",
                      "  } );" ] } ] },
        "srcDocs":
          { "summary": "The object returned by the `startUpload()` function's\n Promise that contains the URL of the successfully uploaded file.",
            "links":
              [ "[startUpload](#startUpload)" ],
            "examples":
              [ { "title": "Get uploaded file information",
                  "body":
                    [ "$w(\"#myUploadButton\").startUpload()",
                      "  .then( (uploadedFile) => {",
                      "    let url = uploadedFile.url;  // \"wix:image://v1/68d3a9_1de7529c444b4c9eb38401f8efe0cad2.jpg/flowers.jpg/#originWidth=1970&originHeight=1120\"",
                      "  } )",
                      "  .catch( (uploadError) => {",
                      "    let errCode = uploadError.errorCode;  // 7751",
                      "    let errDesc = uploadError.errorDescription;\t// \"Error description\"",
                      "  } );" ] } ] },
        "members":
          [ { "name": "url",
              "type": "string",
              "docs": "The Wix URL of the uploaded file.",
              "srcDocs": "The Wix URL of the uploaded file." } ],
        "labels": [] } ] }