{ "name": "FocusMixin",
  "memberOf": "$w",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "filename": "FocusMixin.es6",
      "lineno": 4 },
  "docs":
    { "summary": "Provides functionality for elements that can set and lose focus.\n\n The element on the page that is currently active is the element in focus.\n Only one element on the page can have focus at any given moment.\n Typically, an element exhibits a visual cue, such as a subtle outline,\n indicating that it is in focus. The element in focus receives keystroke\n events if the user causes any.\n\n An element receives focus and loses focus (blurs) through user actions,\n such as clicking and tabbing, or programmatically, using the\n [focus( )](#focus) and [blur( )](#blur) functions.",
      "links": [],
      "examples": [] },
  "srcDocs":
    { "summary": "Provides functionality for elements that can set and lose focus.\n\n The element on the page that is currently active is the element in focus.\n Only one element on the page can have focus at any given moment.\n Typically, an element exhibits a visual cue, such as a subtle outline,\n indicating that it is in focus. The element in focus receives keystroke\n events if the user causes any.\n\n An element receives focus and loses focus (blurs) through user actions,\n such as clicking and tabbing, or programmatically, using the\n [focus( )](#focus) and [blur( )](#blur) functions.",
      "links": [],
      "examples": [] },
  "properties": [],
  "operations":
    [ { "name": "blur",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "filename": "FocusMixin.es6",
              "lineno": 48 } ],
        "docs":
          { "summary": "Removes focus from the element.",
            "description":
              [ "The `blur()` function removes focus from the element and fires a `blur`",
                " event.",
                "",
                " The `blur` event handlers set on this element by the [onBlur( )](#onBlur)",
                " function or in the Editor will called.",
                "",
                " Removing focus through a call to this function is equivalent to a user",
                " clicking on another element or tabbing out of the element manually.",
                "",
                " If blur() is called on an element that is not in focus, it has no effect.",
                " The element in focus remains in focus and the `onBlur` event handlers",
                " are not called." ],
            "links":
              [ "[onBlur( )](#onBlur)",
                "[focus( )](#focus)",
                "[onFocus( )](#onFocus)" ],
            "examples":
              [ { "title": "Remove focus from an element",
                  "body":
                    [ "$w(\"#myElement\").blur();" ] } ] },
        "srcDocs":
          { "summary": "Removes focus from the element.",
            "description":
              [ "The `blur()` function removes focus from the element and fires a `blur`",
                " event.",
                "",
                " The `blur` event handlers set on this element by the [onBlur( )](#onBlur)",
                " function or in the Editor will called.",
                "",
                " Removing focus through a call to this function is equivalent to a user",
                " clicking on another element or tabbing out of the element manually.",
                "",
                " If blur() is called on an element that is not in focus, it has no effect.",
                " The element in focus remains in focus and the `onBlur` event handlers",
                " are not called." ],
            "links":
              [ "[onBlur( )](#onBlur)",
                "[focus( )](#focus)",
                "[onFocus( )](#onFocus)" ],
            "examples":
              [ { "title": "Remove focus from an element",
                  "body":
                    [ "$w(\"#myElement\").blur();" ] } ] } },
      { "name": "focus",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type": "void" },
        "locations":
          [ { "filename": "FocusMixin.es6",
              "lineno": 21 } ],
        "docs":
          { "summary": "Places focus on the element.",
            "description":
              [ "The `focus()` function places focus on the element and fires a `focus`",
                " event.",
                "",
                " The `focus` event handlers set on this element by the [onFocus( )](#onFocus)",
                " function or in the Editor will called.",
                "",
                " Receiving focus through a call to this function is equivalent to",
                " a user clicking on or tabbing to the element manually." ],
            "links":
              [ "[onFocus( )](#onFocus)",
                "[blur( )](#blur)",
                "[onBlur( )](#onBlur)" ],
            "examples":
              [ { "title": "Place focus on an element",
                  "body":
                    [ "$w(\"#myElement\").focus();" ] } ] },
        "srcDocs":
          { "summary": "Places focus on the element.",
            "description":
              [ "The `focus()` function places focus on the element and fires a `focus`",
                " event.",
                "",
                " The `focus` event handlers set on this element by the [onFocus( )](#onFocus)",
                " function or in the Editor will called.",
                "",
                " Receiving focus through a call to this function is equivalent to",
                " a user clicking on or tabbing to the element manually." ],
            "links":
              [ "[onFocus( )](#onFocus)",
                "[blur( )](#blur)",
                "[onBlur( )](#onBlur)" ],
            "examples":
              [ { "title": "Place focus on an element",
                  "body":
                    [ "$w(\"#myElement\").focus();" ] } ] } },
      { "name": "onBlur",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the element losed focus.",
              "srcDoc": "The name of the function or\n the function expression to run when the element losed focus." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element on which the event is now registered.",
            "srcDoc": "The element on which the event is now registered." },
        "locations":
          [ { "filename": "FocusMixin.es6",
              "lineno": 115 } ],
        "docs":
          { "summary": "Adds an event handler that runs when the element loses focus.",
            "description":
              [ "An element loses focus (blurs) through user actions,",
                " such as clicking and tabbing, or programmatically, using the",
                " [blur( )](#blur) function." ],
            "links":
              [ "[blur( )](#blur)",
                "[onFocus( )](#onFocus)",
                "[focus( )](#focus)" ],
            "examples":
              [ { "title": "Get the ID of the element that has lost focus",
                  "body":
                    [ "$w(\"#myElement\").onBlur( (event, $w) => {",
                      "  let targetId = event.target.id; // \"myElement\"",
                      "});" ] } ] },
        "srcDocs":
          { "summary": "Adds an event handler that runs when the element loses focus.",
            "description":
              [ "An element loses focus (blurs) through user actions,",
                " such as clicking and tabbing, or programmatically, using the",
                " [blur( )](#blur) function." ],
            "links":
              [ "[blur( )](#blur)",
                "[onFocus( )](#onFocus)",
                "[focus( )](#focus)" ],
            "examples":
              [ { "title": "Get the ID of the element that has lost focus",
                  "body":
                    [ "$w(\"#myElement\").onBlur( (event, $w) => {",
                      "  let targetId = event.target.id; // \"myElement\"",
                      "});" ] } ] } },
      { "name": "onFocus",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.EventHandler",
              "doc": "The name of the function or\n the function expression to run when the element receives focus.",
              "srcDoc": "The name of the function or\n the function expression to run when the element receives focus." } ],
        "ret":
          { "type": "$w.Element",
            "doc": "The element on which the event is now registered.",
            "srcDoc": "The element on which the event is now registered." },
        "locations":
          [ { "filename": "FocusMixin.es6",
              "lineno": 79 } ],
        "docs":
          { "summary": "Adds an event handler that runs when the element receives focus.",
            "description":
              [ "An element receives focus through user actions,",
                " such as clicking and tabbing, or programmatically, using the",
                " [focus( )](#focus) function." ],
            "links":
              [ "[focus( )](#focus)",
                "[onBlur( )](#onBlur)",
                "[blur( )](#blur)" ],
            "examples":
              [ { "title": "Get the ID of the element that has received focus",
                  "body":
                    [ "$w(\"#myElement\").onFocus( (event, $w) => {",
                      "  let targetId = event.target.id; // \"myElement\"",
                      "});" ] } ] },
        "srcDocs":
          { "summary": "Adds an event handler that runs when the element receives focus.",
            "description":
              [ "An element receives focus through user actions,",
                " such as clicking and tabbing, or programmatically, using the",
                " [focus( )](#focus) function." ],
            "links":
              [ "[focus( )](#focus)",
                "[onBlur( )](#onBlur)",
                "[blur( )](#blur)" ],
            "examples":
              [ { "title": "Get the ID of the element that has received focus",
                  "body":
                    [ "$w(\"#myElement\").onFocus( (event, $w) => {",
                      "  let targetId = event.target.id; // \"myElement\"",
                      "});" ] } ] } } ],
  "callbacks": [],
  "messages": [] }