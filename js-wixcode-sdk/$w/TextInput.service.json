{ "name": "TextInput",
  "memberOf": "$w",
  "mixes":
    [ "$w.FormElement",
      "$w.HiddenCollapsedMixin",
      "$w.DisabledMixin",
      "$w.TextInputMixin",
      "$w.FocusMixin",
      "$w.ReadOnlyMixin",
      "$w.ClickableMixin" ],
  "labels":
    [ "new" ],
  "location":
    { "filename": "TextInput.es6",
      "lineno": 17 },
  "docs":
    { "summary": "An input element for capturing small amounts of text.",
      "links": [],
      "examples": [] },
  "srcDocs":
    { "summary": "An input element for capturing small amounts of text.",
      "links": [],
      "examples": [] },
  "properties":
    [ { "name": "inputType",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "TextInput.es6",
              "lineno": 184 } ],
        "docs":
          { "summary": "Sets or gets the input type of an Input element.",
            "description":
              [ "Setting the `inputType` property sets what type of data a",
                " user can enter into the text input element. However, it does not limit",
                " your ability to change the value programmatically.",
                "",
                " Getting the `inputType` property gets what type of data a",
                " user can enter into the text input element.",
                "",
                " The text input types are:",
                " + `\"text\"` - Can contain any type of character.",
                " + `\"password\"` - A password field. Text is hidden with bullets (•••).",
                " + `\"number\"` - A valid number.",
                " + `\"email\"`- A valid email address.",
                " + `\"url\"` - A valid web address.",
                " + `\"tel\"` - Can contain only digits and certain symbols.",
                "",
                "",
                " You can also set an element's `inputType` property in the Editor using the Settings pane:",
                " ![Input Settings pane](images/input_settings-type.png)" ],
            "links": [],
            "examples":
              [ { "title": "Gets a text input's input type",
                  "body":
                    [ "let type = $w(\"#myTextInput\").inputType;  // \"email\"" ] },
                { "title": "Sets a text input's input type",
                  "body":
                    [ "$w(\"#myTextInput\").inputType = \"email\";" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets the input type of an Input element.",
            "description":
              [ "Setting the `inputType` property sets what type of data a",
                " user can enter into the text input element. However, it does not limit",
                " your ability to change the value programmatically.",
                "",
                " Getting the `inputType` property gets what type of data a",
                " user can enter into the text input element.",
                "",
                " The text input types are:",
                " + `\"text\"` - Can contain any type of character.",
                " + `\"password\"` - A password field. Text is hidden with bullets (•••).",
                " + `\"number\"` - A valid number.",
                " + `\"email\"`- A valid email address.",
                " + `\"url\"` - A valid web address.",
                " + `\"tel\"` - Can contain only digits and certain symbols.",
                "",
                "",
                " You can also set an element's `inputType` property in the Editor using the Settings pane:",
                " ![Input Settings pane](images/input_settings-type.png)" ],
            "links": [],
            "examples":
              [ { "title": "Gets a text input's input type",
                  "body":
                    [ "let type = $w(\"#myTextInput\").inputType;  // \"email\"" ] },
                { "title": "Sets a text input's input type",
                  "body":
                    [ "$w(\"#myTextInput\").inputType = \"email\";" ] } ] } },
      { "name": "max",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "filename": "TextInput.es6",
              "lineno": 73 } ],
        "docs":
          { "summary": "Sets or gets the maximum value for a text input element whose\n type is set to **Number**.",
            "description":
              [ "Setting the `max` property restricts users from changing",
                " the text input's value to a number greater than `max` if the",
                " text input is set to be a **Number** type. However, it does not limit",
                " your ability to change the value to a number greater than `max`",
                " programmatically.",
                "",
                " Set `max` to `undefined` to remove the current maximum value limitation.",
                "",
                " Getting the `max` property returns the maximum value a user",
                " can enter into the text input.",
                "",
                " You can also set an element's `max` property in the Editor using the Settings pane:",
                " ![Input Settings pane](images/input_settings-max_value.png)" ],
            "links":
              [ "[min](#min)" ],
            "examples":
              [ { "title": "Gets a text input's max value",
                  "body":
                    [ "let maxVal = $w(\"#myTextInput\").max;  // 200" ] },
                { "title": "Sets a text input's max value",
                  "body":
                    [ "$w(\"#myTextInput\").max = 200;" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets the maximum value for a text input element whose\n type is set to **Number**.",
            "description":
              [ "Setting the `max` property restricts users from changing",
                " the text input's value to a number greater than `max` if the",
                " text input is set to be a **Number** type. However, it does not limit",
                " your ability to change the value to a number greater than `max`",
                " programmatically.",
                "",
                " Set `max` to `undefined` to remove the current maximum value limitation.",
                "",
                " Getting the `max` property returns the maximum value a user",
                " can enter into the text input.",
                "",
                " You can also set an element's `max` property in the Editor using the Settings pane:",
                " ![Input Settings pane](images/input_settings-max_value.png)" ],
            "links":
              [ "[min](#min)" ],
            "examples":
              [ { "title": "Gets a text input's max value",
                  "body":
                    [ "let maxVal = $w(\"#myTextInput\").max;  // 200" ] },
                { "title": "Sets a text input's max value",
                  "body":
                    [ "$w(\"#myTextInput\").max = 200;" ] } ] } },
      { "name": "min",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "filename": "TextInput.es6",
              "lineno": 129 } ],
        "docs":
          { "summary": "Sets or gets the minimum value for a text input element whose\n type is set to **Number**.",
            "description":
              [ "Setting the `min` property restricts users from changing",
                " the text input's value to a number lower than `min` if the",
                " text input is set to be a **Number** type. However, it does not limit",
                " your ability to change the value to a number lower than `min`",
                " programmatically.",
                "",
                " Set `min` to `undefined` to remove the current maximum value limitation.",
                "",
                " Getting the `min` property returns the minimum value a user",
                " can enter into the text input.",
                "",
                " You can also set an element's `min` property in the Editor using the Settings pane:",
                " ![Input Settings pane](images/input_settings-min_value.png)" ],
            "links":
              [ "[max](#max)" ],
            "examples":
              [ { "title": "Gets a text input's min value",
                  "body":
                    [ "let minVal = $w(\"#myTextInput\").min;  // 100" ] },
                { "title": "Sets a text input's min value",
                  "body":
                    [ "$w(\"#myTextInput\").min = 100;" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets the minimum value for a text input element whose\n type is set to **Number**.",
            "description":
              [ "Setting the `min` property restricts users from changing",
                " the text input's value to a number lower than `min` if the",
                " text input is set to be a **Number** type. However, it does not limit",
                " your ability to change the value to a number lower than `min`",
                " programmatically.",
                "",
                " Set `min` to `undefined` to remove the current maximum value limitation.",
                "",
                " Getting the `min` property returns the minimum value a user",
                " can enter into the text input.",
                "",
                " You can also set an element's `min` property in the Editor using the Settings pane:",
                " ![Input Settings pane](images/input_settings-min_value.png)" ],
            "links":
              [ "[max](#max)" ],
            "examples":
              [ { "title": "Gets a text input's min value",
                  "body":
                    [ "let minVal = $w(\"#myTextInput\").min;  // 100" ] },
                { "title": "Sets a text input's min value",
                  "body":
                    [ "$w(\"#myTextInput\").min = 100;" ] } ] } },
      { "name": "value",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "TextInput.es6",
              "lineno": 45 } ],
        "docs":
          { "summary": "Sets or gets a text input's value.",
            "description":
              [ "To reset the text input, restoring any placeholder text, set the value",
                " property to null or undefined." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's value",
                  "body":
                    [ "let myValue = $w(\"#myElement\").value;" ] },
                { "title": "Set an element's value",
                  "body":
                    [ "$w(\"#myElement\").value = 42;" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets a text input's value.",
            "description":
              [ "To reset the text input, restoring any placeholder text, set the value",
                " property to null or undefined." ],
            "links": [],
            "examples":
              [ { "title": "Get an element's value",
                  "body":
                    [ "let myValue = $w(\"#myElement\").value;" ] },
                { "title": "Set an element's value",
                  "body":
                    [ "$w(\"#myElement\").value = 42;" ] } ] } } ],
  "operations": [],
  "callbacks": [],
  "messages": [] }