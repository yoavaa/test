{ "name": "Dropdown",
  "memberOf": "$w",
  "mixes":
    [ "$w.FormElement",
      "$w.HiddenCollapsedMixin",
      "$w.DisabledMixin",
      "$w.FocusMixin",
      "$w.ClickableMixin" ],
  "labels":
    [ "new" ],
  "location":
    { "filename": "DropDown.es6",
      "lineno": 25 },
  "docs":
    { "summary": "Dropdowns are used for selecting one of a number of options.\n They are especially useful when there are too many options to display using\n [radio buttons]($w.RadioButtonGroup.html). Dropdowns consist of a list\n of [options](#Option). Each [option](#Option) contains a label, which is\n what the user sees, and a value, which is what is used in code and stored in\n you collections.",
      "links": [],
      "examples": [] },
  "srcDocs":
    { "summary": "Dropdowns are used for selecting one of a number of options.\n They are especially useful when there are too many options to display using\n [radio buttons]($w.RadioButtonGroup.html). Dropdowns consist of a list\n of [options](#Option). Each [option](#Option) contains a label, which is\n what the user sees, and a value, which is what is used in code and stored in\n you collections.",
      "links": [],
      "examples": [] },
  "properties":
    [ { "name": "options",
        "labels": [],
        "get": true,
        "set": false,
        "type":
          { "name": "Array",
            "typeParams":
              [ "$w.Dropdown~Option" ] },
        "locations":
          [ { "filename": "DropDown.es6",
              "lineno": 62 } ],
        "docs":
          { "summary": "Sets or gets the options in a dropdown.",
            "description":
              [ "Setting the `options` property sets all the [options](#Option)",
                " available to a user.",
                "",
                " Set `options` to an empty array (`[]`) to remove the current dropdown options.",
                "",
                " Getting the `options` property returns the current",
                " list of [options](#Option) available to a user.",
                "",
                " You cannot modify the options array in-place. To add, change, or remove",
                " individual dropdown options:",
                "   1. Store the value of the `options` property in a variable.",
                "   1. Make changes to the options array.",
                "   1. Reset the `options` property with the modified array." ],
            "links":
              [ "[Option](#Option)" ],
            "examples":
              [ { "title": "Get the list of options and the first option's label and value from dropdown",
                  "body":
                    [ "let dropdownOptions = $w(\"#myDropdown\").options;",
                      "",
                      "let firstLabel = dropdownOptions[0].label;  // \"First Label\"",
                      "let firstValue = dropdownOptions[0].value;  // \"first_value\"" ] },
                { "title": "Set the list of options for a dropdown",
                  "body":
                    [ "$w(\"#myDropdown\").options = [",
                      "  {\"label\": \"Who's on first!\", \"value\": 1},",
                      "  {\"label\": \"What's on second\", \"value\": 2},",
                      "  {\"label\": \"I Don't Know is on third\", \"value\": 3}",
                      "];" ] },
                { "title": "Add an option to a dropdown",
                  "body":
                    [ "let opts = $w(\"#myDropdown\").options;",
                      "opts.push({label: \"New item\", value: \"new item\"});",
                      "$w(\"#myDropdown\").options = opts;" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets the options in a dropdown.",
            "description":
              [ "Setting the `options` property sets all the [options](#Option)",
                " available to a user.",
                "",
                " Set `options` to an empty array (`[]`) to remove the current dropdown options.",
                "",
                " Getting the `options` property returns the current",
                " list of [options](#Option) available to a user.",
                "",
                " You cannot modify the options array in-place. To add, change, or remove",
                " individual dropdown options:",
                "   1. Store the value of the `options` property in a variable.",
                "   1. Make changes to the options array.",
                "   1. Reset the `options` property with the modified array." ],
            "links":
              [ "[Option](#Option)" ],
            "examples":
              [ { "title": "Get the list of options and the first option's label and value from dropdown",
                  "body":
                    [ "let dropdownOptions = $w(\"#myDropdown\").options;",
                      "",
                      "let firstLabel = dropdownOptions[0].label;  // \"First Label\"",
                      "let firstValue = dropdownOptions[0].value;  // \"first_value\"" ] },
                { "title": "Set the list of options for a dropdown",
                  "body":
                    [ "$w(\"#myDropdown\").options = [",
                      "  {\"label\": \"Who's on first!\", \"value\": 1},",
                      "  {\"label\": \"What's on second\", \"value\": 2},",
                      "  {\"label\": \"I Don't Know is on third\", \"value\": 3}",
                      "];" ] },
                { "title": "Add an option to a dropdown",
                  "body":
                    [ "let opts = $w(\"#myDropdown\").options;",
                      "opts.push({label: \"New item\", value: \"new item\"});",
                      "$w(\"#myDropdown\").options = opts;" ] } ] } },
      { "name": "placeholder",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "DropDown.es6",
              "lineno": 134 } ],
        "docs":
          { "summary": "Sets or gets the dropdown's placeholder text.",
            "description":
              [ "Placeholder text is typically used to",
                " provide a hint to the user describing what the dropdown is for.",
                " When the user chooses an option, the placeholder text disappears." ],
            "links": [],
            "examples":
              [ { "title": "Get a dropdown's placeholder text",
                  "body":
                    [ "let placeholderStr = $w(\"#myDropdown\").placeholder; // \"Enter name\"" ] },
                { "title": "Set a dropdown's placeholder text",
                  "body":
                    [ "$w(\"#myDropdown\").placeholder = \"Choose your city\";" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets the dropdown's placeholder text.",
            "description":
              [ "Placeholder text is typically used to",
                " provide a hint to the user describing what the dropdown is for.",
                " When the user chooses an option, the placeholder text disappears." ],
            "links": [],
            "examples":
              [ { "title": "Get a dropdown's placeholder text",
                  "body":
                    [ "let placeholderStr = $w(\"#myDropdown\").placeholder; // \"Enter name\"" ] },
                { "title": "Set a dropdown's placeholder text",
                  "body":
                    [ "$w(\"#myDropdown\").placeholder = \"Choose your city\";" ] } ] } },
      { "name": "selectedIndex",
        "labels": [],
        "get": true,
        "set": false,
        "type": "number",
        "locations":
          [ { "filename": "DropDown.es6",
              "lineno": 176 } ],
        "docs":
          { "summary": "Sets or gets the index of the selected option.",
            "description":
              [ "Setting the `selectedIndex` property sets the option at",
                " that index to be the selected option. To set one of the options to be",
                " selected, set the `selectedIndex` property to an index between `0` and",
                " `options.length - 1`.",
                "",
                " To reset the dropdown to have no option",
                " selected, set the `selectedIndex` property to `undefined`.",
                "",
                " Getting the `selectedIndex` property returns the index of",
                " the currently selected option. If no value is selected, the",
                " `selectedIndex` property returns `undefined`." ],
            "links": [],
            "examples":
              [ { "title": "Get the index of the selected option",
                  "body":
                    [ "let dropdownSelIndex = $w(\"#myDropdown\").selectedIndex; // 3" ] },
                { "title": "Select the first option by index",
                  "body":
                    [ "$w(\"#myDropdown\").selectedIndex = 0;" ] } ] },
        "srcDocs":
          { "summary": "Sets or gets the index of the selected option.",
            "description":
              [ "Setting the `selectedIndex` property sets the option at",
                " that index to be the selected option. To set one of the options to be",
                " selected, set the `selectedIndex` property to an index between `0` and",
                " `options.length - 1`.",
                "",
                " To reset the dropdown to have no option",
                " selected, set the `selectedIndex` property to `undefined`.",
                "",
                " Getting the `selectedIndex` property returns the index of",
                " the currently selected option. If no value is selected, the",
                " `selectedIndex` property returns `undefined`." ],
            "links": [],
            "examples":
              [ { "title": "Get the index of the selected option",
                  "body":
                    [ "let dropdownSelIndex = $w(\"#myDropdown\").selectedIndex; // 3" ] },
                { "title": "Select the first option by index",
                  "body":
                    [ "$w(\"#myDropdown\").selectedIndex = 0;" ] } ] } } ],
  "operations": [],
  "callbacks": [],
  "messages":
    [ { "name": "Option",
        "locations":
          [ { "filename": "DropDown.es6",
              "lineno": 52 } ],
        "docs":
          { "summary": "An object used by the `options` property that contains the attributes of a dropdown list item.",
            "links":
              [ "[options](#Options)",
                "[value](#value)" ],
            "examples":
              [ { "title": "Get option info",
                  "body":
                    [ "let firstOption = $w(\"#myDropdown\").options[0];",
                      "",
                      "let optionLabel = firstOption.label;  // \"First choice\"",
                      "let optionValue = firstOption.value;  // \"first_choice\"" ] } ] },
        "srcDocs":
          { "summary": "An object used by the `options` property that contains the attributes of a dropdown list item.",
            "links":
              [ "[options](#Options)",
                "[value](#value)" ],
            "examples":
              [ { "title": "Get option info",
                  "body":
                    [ "let firstOption = $w(\"#myDropdown\").options[0];",
                      "",
                      "let optionLabel = firstOption.label;  // \"First choice\"",
                      "let optionValue = firstOption.value;  // \"first_choice\"" ] } ] },
        "members":
          [ { "name": "value",
              "type": "string",
              "docs": "The value of the dropdown option. This is what you use in code and is what is stored in your collections.",
              "srcDocs": "The value of the dropdown option. This is what you use in code and is what is stored in your collections." },
            { "name": "label",
              "type": "string",
              "docs": "The label of the dropdown option. This is what a user sees.",
              "srcDocs": "The label of the dropdown option. This is what a user sees." } ],
        "labels": [] } ] }