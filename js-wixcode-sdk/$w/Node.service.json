{ "name": "Node",
  "memberOf": "$w",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "filename": "Node.es6",
      "lineno": 8 },
  "docs":
    { "summary": "Provides basic functionality for all Wix objects, including objects\n that are not [elements]($w.Element.html).",
      "links": [],
      "examples": [] },
  "srcDocs":
    { "summary": "Provides basic functionality for all Wix objects, including objects\n that are not [elements]($w.Element.html).",
      "links": [],
      "examples": [] },
  "properties":
    [ { "name": "global",
        "labels": [],
        "get": true,
        "set": false,
        "type": "boolean",
        "locations":
          [ { "filename": "Node.es6",
              "lineno": 111 } ],
        "docs":
          { "summary": "Indicates if an element appears on all pages or only on the current page.",
            "description":
              [ "If `global` is `true`, the element appears on all pages.",
                "",
                " If `global` is `false`, the element only appears on the current page." ],
            "links": [],
            "examples":
              [ { "title": "Get whether an element is displayed on all pages",
                  "body":
                    [ "let isGlobal = $w(\"#myElement\").global; // false" ] } ] },
        "srcDocs":
          { "summary": "Indicates if an element appears on all pages or only on the current page.",
            "description":
              [ "If `global` is `true`, the element appears on all pages.",
                "",
                " If `global` is `false`, the element only appears on the current page." ],
            "links": [],
            "examples":
              [ { "title": "Get whether an element is displayed on all pages",
                  "body":
                    [ "let isGlobal = $w(\"#myElement\").global; // false" ] } ] } },
      { "name": "id",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "Node.es6",
              "lineno": 27 } ],
        "docs":
          { "summary": "Gets the elements's ID.",
            "description":
              [ "The ID is the element's unique identifier. It is used when selecting",
                " elements using the [`$w()`]($w.html#w) function.",
                "",
                " An element's `id` is set in the Editor using the <a href=\"https://support.wix.com/en/article/how-do-i-use-the-properties-panel\" target=\"_blank\">Properties panel</a>." ],
            "links": [],
            "examples":
              [ { "title": "Get the ID",
                  "body":
                    [ "let myId = $w(\"#myElement\").id; // \"myElement\"" ] } ] },
        "srcDocs":
          { "summary": "Gets the elements's ID.",
            "description":
              [ "The ID is the element's unique identifier. It is used when selecting",
                " elements using the [`$w()`]($w.html#w) function.",
                "",
                " An element's `id` is set in the Editor using the <a href=\"https://support.wix.com/en/article/how-do-i-use-the-properties-panel\" target=\"_blank\">Properties panel</a>." ],
            "links": [],
            "examples":
              [ { "title": "Get the ID",
                  "body":
                    [ "let myId = $w(\"#myElement\").id; // \"myElement\"" ] } ] } },
      { "name": "parent",
        "labels": [],
        "get": true,
        "set": false,
        "type": "$w.Node",
        "locations":
          [ { "filename": "Node.es6",
              "lineno": 72 } ],
        "docs":
          { "summary": "Gets the element's parent element.",
            "description":
              [ "Some elements can contain other elements. This occurs when you drag",
                " an element onto a container element. The container is the `parent` of",
                " all the elements it contains.",
                "",
                " [`Page`]($w.Page.html), [`Header`]($w.Header.html), and",
                " [`Footer`]($w.Footer.html) are top-level elements and have no parent." ],
            "links":
              [ "[children](#children)" ],
            "examples":
              [ { "title": "Get the parent element and the parent's ID",
                  "body":
                    [ "let parentElement = $w(\"#myElement\").parent;",
                      "",
                      "let parentId = parentElement.id; // \"page1\"" ] } ] },
        "srcDocs":
          { "summary": "Gets the element's parent element.",
            "description":
              [ "Some elements can contain other elements. This occurs when you drag",
                " an element onto a container element. The container is the `parent` of",
                " all the elements it contains.",
                "",
                " [`Page`]($w.Page.html), [`Header`]($w.Header.html), and",
                " [`Footer`]($w.Footer.html) are top-level elements and have no parent." ],
            "links":
              [ "[children](#children)" ],
            "examples":
              [ { "title": "Get the parent element and the parent's ID",
                  "body":
                    [ "let parentElement = $w(\"#myElement\").parent;",
                      "",
                      "let parentId = parentElement.id; // \"page1\"" ] } ] } },
      { "name": "type",
        "labels": [],
        "get": true,
        "set": false,
        "type": "string",
        "locations":
          [ { "filename": "Node.es6",
              "lineno": 142 } ],
        "docs":
          { "summary": "Gets the element's type.",
            "links": [],
            "examples":
              [ { "title": "Get the element's type",
                  "body":
                    [ "let myType = $w(\"#myElement\").type; // \"$w.Type\"" ] } ] },
        "srcDocs":
          { "summary": "Gets the element's type.",
            "links": [],
            "examples":
              [ { "title": "Get the element's type",
                  "body":
                    [ "let myType = $w(\"#myElement\").type; // \"$w.Type\"" ] } ] } } ],
  "operations":
    [ { "name": "scrollTo",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "undefined. on fulfilled - When the scroll is complete.",
            "srcDoc": "undefined. on fulfilled - When the scroll is complete." },
        "locations":
          [ { "filename": "Node.es6",
              "lineno": 163 } ],
        "docs":
          { "summary": "Scrolls the page to the element using an animation.",
            "description":
              [ "The `scrollTo()` function returns a Promise that is resolved when the",
                " animated scroll is complete and the element is now in view.",
                "",
                " To scroll to a specific location on the page, see the `wix-window`",
                " [`scrollTo()`](wix-window.html#scrollTo) function.",
                "",
                " Calling the `scrollTo()` function on a repeated item that is selected",
                " from the [global scope]($w.Repeater.html#global-scope) causes an error." ],
            "links": [],
            "examples":
              [ { "title": "Scroll the page to an element",
                  "body":
                    [ "$w(\"#myElement\").scrollTo();" ] },
                { "title": "Scroll the page to an element and log message when done",
                  "body":
                    [ "$w(\"#myElement\").scrollTo()",
                      "  .then( ( ) => {",
                      "    console.log(\"Done with scroll\");",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "Scrolls the page to the element using an animation.",
            "description":
              [ "The `scrollTo()` function returns a Promise that is resolved when the",
                " animated scroll is complete and the element is now in view.",
                "",
                " To scroll to a specific location on the page, see the `wix-window`",
                " [`scrollTo()`](wix-window.html#scrollTo) function.",
                "",
                " Calling the `scrollTo()` function on a repeated item that is selected",
                " from the [global scope]($w.Repeater.html#global-scope) causes an error." ],
            "links": [],
            "examples":
              [ { "title": "Scroll the page to an element",
                  "body":
                    [ "$w(\"#myElement\").scrollTo();" ] },
                { "title": "Scroll the page to an element and log message when done",
                  "body":
                    [ "$w(\"#myElement\").scrollTo()",
                      "  .then( ( ) => {",
                      "    console.log(\"Done with scroll\");",
                      "} );" ] } ] } } ],
  "callbacks": [],
  "messages": [] }