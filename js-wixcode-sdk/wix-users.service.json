{ "name": "wix-users",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "filename": "users.es6",
      "lineno": 9 },
  "docs":
    { "summary": "The wix-users module contains functionality for working with your\n site's users.",
      "description":
        [ "There are three types of users:",
          "",
          " + Visitor - A user who is not logged into your site.",
          " + Member - A user who is logged into your site.",
          " + Admin - The owner of the site.",
          "",
          "",
          " To use the Users API, import `wixUsers` from the `wix-users` module:",
          "",
          "   ``` javascript",
          "   import wixUsers from 'wix-users';",
          "   ```",
          "",
          "The APIs in `wix-users` can only be used in front-end code." ],
      "links": [],
      "examples": [] },
  "srcDocs":
    { "summary": "The wix-users module contains functionality for working with your\n site's users.",
      "description":
        [ "There are three types of users:",
          "",
          " + Visitor - A user who is not logged into your site.",
          " + Member - A user who is logged into your site.",
          " + Admin - The owner of the site.",
          "",
          "",
          " To use the Users API, import `wixUsers` from the `wix-users` module:",
          "",
          "   ``` javascript",
          "   import wixUsers from 'wix-users';",
          "   ```",
          "",
          "The APIs in `wix-users` can only be used in front-end code." ],
      "links": [],
      "examples": [] },
  "properties":
    [ { "name": "currentUser",
        "labels": [],
        "get": true,
        "set": false,
        "type": "wix-users.User",
        "locations":
          [ { "filename": "users.es6",
              "lineno": 197 } ],
        "docs":
          { "summary": "Gets the current user viewing the site.",
            "description":
              [ "Gets a [`User`](wix-users.User.html) object containing information about",
                " the user currently viewing the site." ],
            "links": [],
            "examples":
              [ { "title": "Get the current user's information",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let user = wixUsers.currentUser;",
                      "",
                      "let userId = user.id;           // \"r5cme-6fem-485j-djre-4844c49\"",
                      "let isLoggedIn = user.loggedIn; // true",
                      "let userRole = user.role;       // \"Member\"",
                      "",
                      "user.getEmail()",
                      "  .then( (email) => {",
                      "    let userEmail = email;      // \"user@something.com\"",
                      "  } );" ] } ] },
        "srcDocs":
          { "summary": "Gets the current user viewing the site.",
            "description":
              [ "Gets a [`User`](wix-users.User.html) object containing information about",
                " the user currently viewing the site." ],
            "links": [],
            "examples":
              [ { "title": "Get the current user's information",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let user = wixUsers.currentUser;",
                      "",
                      "let userId = user.id;           // \"r5cme-6fem-485j-djre-4844c49\"",
                      "let isLoggedIn = user.loggedIn; // true",
                      "let userRole = user.role;       // \"Member\"",
                      "",
                      "user.getEmail()",
                      "  .then( (email) => {",
                      "    let userEmail = email;      // \"user@something.com\"",
                      "  } );" ] } ] } } ],
  "operations":
    [ { "name": "logout",
        "labels": [],
        "nameParams": [],
        "params": [],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "undefined. on rejected - Message that the log out was unsuccessful and why.",
            "srcDoc": "undefined. on rejected - Message that the log out was unsuccessful and why." },
        "locations":
          [ { "filename": "users.es6",
              "lineno": 300 } ],
        "docs":
          { "summary": "Logs the current user out of the site.",
            "description":
              [ "The `logout()` function returns a Promise that resolves when the current user",
                " has been logged out of the site." ],
            "links": [],
            "examples":
              [ { "title": "Log out the current user",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.logout();" ] },
                { "title": "Log out the current user and log a message when done",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.logout()",
                      "  .then( ( ) => {",
                      "    console.log(\"User logged out\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err; // \"No member is logged in\"",
                      "  } );" ] } ] },
        "srcDocs":
          { "summary": "Logs the current user out of the site.",
            "description":
              [ "The `logout()` function returns a Promise that resolves when the current user",
                " has been logged out of the site." ],
            "links": [],
            "examples":
              [ { "title": "Log out the current user",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.logout();" ] },
                { "title": "Log out the current user and log a message when done",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.logout()",
                      "  .then( ( ) => {",
                      "    console.log(\"User logged out\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err; // \"No member is logged in\"",
                      "  } );" ] } ] } },
      { "name": "onLogin",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "handler",
              "type": "$w.LoginHandler",
              "doc": "The name of the function or the function expression to run when a user has logged in.",
              "srcDoc": "The name of the function or the function expression to run when a user has logged in." } ],
        "ret":
          { "type": "void" },
        "locations":
          [ { "filename": "users.es6",
              "lineno": 384 } ],
        "docs":
          { "summary": "Sets the function that runs when a user logs in.",
            "description":
              [ "Use the `onLogin()` function for code you want to run after a user successfully",
                " logs into your site.",
                "",
                " Usually, you want to call the `onLogin()` function in the **Site** tab of the",
                " code panel so that the `onLogin()` event handler will be run no matter which",
                " page on your site a user uses to log in." ],
            "links": [],
            "examples":
              [ { "title": "Run code when a user logs in",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.onLogin( (user) => {",
                      "  let userId = user.id;           // \"r5cme-6fem-485j-djre-4844c49\"",
                      "  let isLoggedIn = user.loggedIn; // true",
                      "  let userRole = user.role;       // \"Member\"",
                      "} );" ] } ] },
        "srcDocs":
          { "summary": "Sets the function that runs when a user logs in.",
            "description":
              [ "Use the `onLogin()` function for code you want to run after a user successfully",
                " logs into your site.",
                "",
                " Usually, you want to call the `onLogin()` function in the **Site** tab of the",
                " code panel so that the `onLogin()` event handler will be run no matter which",
                " page on your site a user uses to log in." ],
            "links": [],
            "examples":
              [ { "title": "Run code when a user logs in",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.onLogin( (user) => {",
                      "  let userId = user.id;           // \"r5cme-6fem-485j-djre-4844c49\"",
                      "  let isLoggedIn = user.loggedIn; // true",
                      "  let userRole = user.role;       // \"Member\"",
                      "} );" ] } ] } },
      { "name": "promptForgotPassword",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "language",
              "type": "string",
              "doc": "The language of the reset password form. Defaults to `\"English\"` if not passed or the given language is not one of the languages found in the Permissions tab of the Page Settings panel in the Editor.",
              "srcDoc": "The language of the reset password form. Defaults to `\"English\"` if not passed or the given language is not one of the languages found in the Permissions tab of the Page Settings panel in the Editor.",
              "optional": true } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "undefined. on rejected - Message that the dialog was canceled, user is already logged in, or any other reason the password reset failed.",
            "srcDoc": "undefined. on rejected - Message that the dialog was canceled, user is already logged in, or any other reason the password reset failed." },
        "locations":
          [ { "filename": "users.es6",
              "lineno": 334 } ],
        "docs":
          { "summary": "Prompts the current site visitor with a password reset.",
            "description":
              [ "The `promptForgotPassword()` function returns a Promise that resolves when",
                " the user has sumbitted the forgot password form." ],
            "links":
              [ "[promptLogin( )](#promptLogin)" ],
            "examples":
              [ { "title": "Prompt the user with a password reset",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.promptForgotPassword();" ] },
                { "title": "Prompt the current user to login with given language",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.promptForgotPassword()",
                      "  .then( ( ) => {",
                      "    console.log(\"Password reset submitted\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err; // \"The user closed the forgot password dialog\"",
                      "  } );" ] } ] },
        "srcDocs":
          { "summary": "Prompts the current site visitor with a password reset.",
            "description":
              [ "The `promptForgotPassword()` function returns a Promise that resolves when",
                " the user has sumbitted the forgot password form." ],
            "links":
              [ "[promptLogin( )](#promptLogin)" ],
            "examples":
              [ { "title": "Prompt the user with a password reset",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.promptForgotPassword();" ] },
                { "title": "Prompt the current user to login with given language",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.promptForgotPassword()",
                      "  .then( ( ) => {",
                      "    console.log(\"Password reset submitted\");",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err; // \"The user closed the forgot password dialog\"",
                      "  } );" ] } ] } },
      { "name": "promptLogin",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "options",
              "type": "wix-users~LoginOptions",
              "doc": "The options that determine how the login dialog box appears.",
              "srcDoc": "The options that determine how the login dialog box appears." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-users.User" ] },
            "doc": "undefined. on fulfilled - Information about the newly logged in user.. on rejected - Message that the dialog was canceled, or any other reason the user failed to log in.",
            "srcDoc": "undefined. on fulfilled - Information about the newly logged in user.. on rejected - Message that the dialog was canceled, or any other reason the user failed to log in." },
        "locations":
          [ { "filename": "users.es6",
              "lineno": 234 } ],
        "docs":
          { "summary": "Prompts the current site visitor to log in as a site member.",
            "description":
              [ "The `promptLogin()` function returns a Promise that resolves to the newly",
                " logged in user when the login has completed." ],
            "links":
              [ "[promptForgotPassword( )](#promptForgotPassword)" ],
            "examples":
              [ { "title": "Prompt the current user to login",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.promptLogin()",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;          // \"The user closed the login dialog\"",
                      "  } );" ] },
                { "title": "Prompt the current user to login with given options",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let options = {\"mode\": \"login\", \"lang\": \"es\"};",
                      "",
                      "wixUsers.promptLogin(options)",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;             // \"The user closed the login dialog\"",
                      "  } );" ] } ] },
        "srcDocs":
          { "summary": "Prompts the current site visitor to log in as a site member.",
            "description":
              [ "The `promptLogin()` function returns a Promise that resolves to the newly",
                " logged in user when the login has completed." ],
            "links":
              [ "[promptForgotPassword( )](#promptForgotPassword)" ],
            "examples":
              [ { "title": "Prompt the current user to login",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "wixUsers.promptLogin()",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;          // \"The user closed the login dialog\"",
                      "  } );" ] },
                { "title": "Prompt the current user to login with given options",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let options = {\"mode\": \"login\", \"lang\": \"es\"};",
                      "",
                      "wixUsers.promptLogin(options)",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;             // \"The user closed the login dialog\"",
                      "  } );" ] } ] } } ],
  "callbacks": [],
  "messages":
    [ { "name": "LoginOptions",
        "locations":
          [ { "filename": "users.es6",
              "lineno": 224 } ],
        "docs":
          { "summary": "An object used by the `promptLogin()` function to determine how the login dialog box appears.",
            "links":
              [ "[promptLogin( )](#promptLogin)" ],
            "examples":
              [ { "title": "Prompt the current user to login",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let options = {\"mode\": \"login\", \"lang\": \"es\"};",
                      "",
                      "wixUsers.promptLogin(options)",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;             // \"The user closed the login dialog\"",
                      "  } );" ] } ] },
        "srcDocs":
          { "summary": "An object used by the `promptLogin()` function to determine how the login dialog box appears.",
            "links":
              [ "[promptLogin( )](#promptLogin)" ],
            "examples":
              [ { "title": "Prompt the current user to login",
                  "body":
                    [ "import wixUsers from 'wix-users';",
                      "",
                      "// ...",
                      "",
                      "let options = {\"mode\": \"login\", \"lang\": \"es\"};",
                      "",
                      "wixUsers.promptLogin(options)",
                      "  .then( (user) => {",
                      "    let userId = user.id;           // \"r5me-6fem-45jf-djhe-484349\"",
                      "    let isLoggedIn = user.loggedIn; // true",
                      "    let userRole = user.role;       // \"member\"",
                      "    return user.getEmail();",
                      "  } )",
                      "  .then( (email) => {",
                      "    let userEmail = email;          // \"user@something.com\"",
                      "  } )",
                      "  .catch( (err) => {",
                      "    let errorMsg = err;             // \"The user closed the login dialog\"",
                      "  } );" ] } ] },
        "members":
          [ { "name": "mode",
              "type": "string",
              "docs": "What type of login experience to present: `\"login\"` or `\"signup\"`. Defaults to the option chosen in the Member Signup Settings panel in the Editor.",
              "srcDocs": "What type of login experience to present: `\"login\"` or `\"signup\"`. Defaults to the option chosen in the Member Signup Settings panel in the Editor." },
            { "name": "lang",
              "type": "string",
              "docs": "The two letter language code of the language to show the login form in. Defaults to `\"en\"` if the property doesn't exist or the given language is not one of the languages found in the Permissions tab of the Page Settings panel in the Editor.",
              "srcDocs": "The two letter language code of the language to show the login form in. Defaults to `\"en\"` if the property doesn't exist or the given language is not one of the languages found in the Permissions tab of the Page Settings panel in the Editor." } ],
        "labels": [] } ] }